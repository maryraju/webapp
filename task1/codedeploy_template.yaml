Parameters:
  KeyName:
    Type: String
    Default: codedeploy
  WebappSubnets:
    Type: CommaDelimitedList
    Default: subnet-03f5f68dcb2d39907, subnet-0873761aea5355347, subnet-0178c1c0651149934
  MinSize:
    Type: Number
    Default: 1
  MaxSize:
    Type: Number
    Default: 2
  VPC:
    Type: String
    Default: vpc-0826bd32df01a2dea
  AMIID:
    Type: String
    Default: ami-074dc0a6f6c764218
Resources:
  WebappApplication:
    Type: "AWS::CodeDeploy::Application"
  WebappDeploymentGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      ApplicationName: !Ref WebappApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      AutoScalingGroups:
      - Ref: AutoScalingGroup
      Deployment: 
        Description: "A sample deployment"         
        Revision: 
          RevisionType: GitHub 
          GitHubLocation: 
            CommitId: 702a7dae3f403bacdbced45351f400984c52937b
            Repository: maryraju/github-codedeploy  
  WebappSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow access to Webapp from Internet
      VpcId:
        Ref: VPC
      SecurityGroupIngress:      
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
  CodeDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codedeploy.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: allow-autoscaling
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - ec2:*
                  - autoscaling:*
                Resource: "*"
  WebappInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - Ref: WebappRole
  WebappLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: AMIID
      InstanceType: t2.medium
      KeyName:
        Ref: KeyName
      SecurityGroups:
        - Ref: WebappSecurityGroup
      IamInstanceProfile:
        Ref: WebappInstanceProfile
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            #install codedeploy agent
            sudo yum -y update
            sudo yum -y install ruby
            sudo yum install wget
            cd /home/ec2-user
            wget https://aws-codedeploy-ap-south-1.s3.ap-south-1.amazonaws.com/latest/install
            sudo chmod +x ./install
            sudo ./install auto
            
            #Install docker
            echo 'Installing docker'
            sudo yum update -y
            sudo yum -y install docker
            sudo service docker start
            sudo usermod -a -G docker ec2-user
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      MinSize:
        Ref: MinSize
      MaxSize:
        Ref: MaxSize
      LaunchConfigurationName:
        Ref: WebappLaunchConfig
      VPCZoneIdentifier:
        Ref: WebappSubnets
      Tags:
        - Key: Name
          Value: gunicorn-app
          PropagateAtLaunch: true
Outputs:
  DeploymentGroup:
    Description: Webapp Deployment Group
    Value: !Ref WebappDeploymentGroup
